name: Deploy to ECS Blue/Green

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init and Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Export Terraform Outputs to GitHub Environment
        run: |
          cd terraform

          # Use full path to terraform binary
          /home/runner/work/_temp/***/terraform-bin output -json > tf_outputs.json

          cat tf_outputs.json

          MASTER=$(jq -r '.master_node_ip.value' tf_outputs.json)
          WORKER1=$(jq -r '.worker_node_1_ip.value' tf_outputs.json)
          WORKER2=$(jq -r '.worker_node_2_ip.value' tf_outputs.json)

          echo "MASTER_NODE_IP=$MASTER" >> $GITHUB_ENV
          echo "WORKER_NODE_1_IP=$WORKER1" >> $GITHUB_ENV
          echo "WORKER_NODE_2_IP=$WORKER2" >> $GITHUB_ENV


      - name: Install Ansible and jq
        run: |
          sudo apt update
          sudo apt install -y ansible jq

      - name: Update hosts.ini with IPs
        run: |
          sed -i "s/\$MASTER_NODE_IP/${{ env.MASTER_NODE_IP }}/g" k8s-ansible/hosts.ini
          sed -i "s/\$WORKER_NODE_1_IP/${{ env.WORKER_NODE_1_IP }}/g" k8s-ansible/hosts.ini
          sed -i "s/\$WORKER_NODE_2_IP/${{ env.WORKER_NODE_2_IP }}/g" k8s-ansible/hosts.ini

          cat k8s-ansible/hosts.ini


      - name: Set up SSH for Ansible
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/karthik.pem
          chmod 600 ~/.ssh/karthik.pem
          ssh-keyscan -H $MASTER_NODE_IP >> ~/.ssh/known_hosts
          ssh-keyscan -H $WORKER_NODE_1_IP >> ~/.ssh/known_hosts
          ssh-keyscan -H $WORKER_NODE_2_IP >> ~/.ssh/known_hosts

          cat ~/.ssh/karthik.pem

      - name: Show first line of key (debug only)
        run: |
          head -n 1 ~/.ssh/karthik.pem


      - name: Run Ansible Playbook
        run: |
          cd k8s-ansible
          ansible-playbook playbooks/init.yaml

          

      - name: Wait for 5 minutes
        if: always()
        run: sleep 180
  
      - name: Terraform Destroy
        if: always()
        run: |
          cd terraform
          terraform destroy -auto-approve


      