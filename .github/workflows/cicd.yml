name: Deploy to ECS Blue/Green

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init and Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Extract Terraform Outputs to Environment
        run: |
          cd terraform
          terraform output -json > tf_outputs.json
          echo "MASTER_NODE_IP=$(cat tf_outputs.json | jq -r '.master_node_ip.value')" >> $GITHUB_ENV
          echo "WORKER_NODE_1_IP=$(cat tf_outputs.json | jq -r '.worker_node_1_ip.value')" >> $GITHUB_ENV
          echo "WORKER_NODE_2_IP=$(cat tf_outputs.json | jq -r '.worker_node_2_ip.value')" >> $GITHUB_ENV

      - name: Use the output values
        run: |
          echo "Master IP: $MASTER_NODE_IP"
          echo "Worker 1 IP: $WORKER_NODE_1_IP"
          echo "Worker 2 IP: $WORKER_NODE_2_IP"

      - name: Wait for 5 minutes
        if: always()
        run: sleep 180
  
      - name: Terraform Destroy
        if: always()
        run: |
          cd terraform
          terraform destroy -auto-approve
